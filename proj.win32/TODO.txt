//In Lane, I need to do the following
-save the original interval and the original speed
-when increasing speed, I am going to increase it by a certain PERCENTAGE
-when decreasing the interval, I am going to decrease it by the same 1/PERCENTAGE as above
-for example, if I double the speed (speed * 2), then interval will be (interval * 1/2)
-should I increase the speed by 5% at a time...10%.  What should the upper limit be?
	-I think I will just have to experiment
-I think the speed should probably increase based on eggs collected...maybe bump the increase to 20%?



TODO (Important):
-fix egg scramble mode:
	-work on the speed increase
	-as the traffic moves faster, the time that a log disappears should decrease (it should be a percentage of the log movement duration)
	-as speed increases in egg scramble, the new cars should be spawning quicker
	-should traffic steady increase as time goes on, or as eggs are collected?
-find an appropriate number of cars per level, as well as appropriate interval
-the logs shouldn't disappear right after coming onto the screen
-I saw the game crash when I beat level 2 while riding a log...whattup w/ that?
-make all road level and all water level
-pretty up the game over score screen.  Indicate if one of the scores is new.
-try out stuff on various screen sizes
-fix cars in different lanes killing chickens (sprite sizing issues -- depends on resolution)
-logs of various lengths
-alligators to ride
-splash screen
-tutorial screen (or just an explanation when the mode is selected)
-link to play/iStore on about screen?

-------------------------------------------------------------------------------------------------------------------------------
TODO (Cleanup):
-when to include #include declarations in .h and when in .cpp?
-make Dimensions a singleton that can be reference like CCDirector (so I don't have to new it in every class)
-should I have a return; after every killChicken() in the update loop?
-figure out how to have an 'exit' button on a layer that replaces the current layer with the previous
layer (e.g. on the Main Menu or the Game Over screens).  This might involve callbacks on the parent layer,
or doing a "getParent" kind of thing.
-scale vehicle sprites better
-add vehicles to CCArray instead of vector?
-Egg Scramble Mode:
	-add a lower and upper limit on speed increases for egg scramble mode
	-make sure cars can't run into each other due to speeding up in egg scramble mode
	-in egg scramble mode, as the speed increases, the interval needs to decrease
	-fix game-over-scoring for eggscramblemode (look into std::to_string(42);)
-make a plist for game settings...this might include speed increase times for easy/medium/hard
-add ability to randomize spawn interval
-clean up disappearing log stuff:
	-clean up the log class.  It inherits from Log...make it look like it.
-intervals should probably be different for water vs road
-------------------------------------------------------------------------------------------------------------------------


Features:
-Timed mode
-Keep playing until you die
-Compete against self
-gain points with items to pickup?
-pick up items to eliminate traffic
-swipe option or buttons on screen option
-levels described in plist file(s).  Setting speed/interval of 0 will randomize the value.
-regular mode (go through the levels, collect the egg).  Also time attack mode and frogger mode, but levels are unlocked by completing them in regular mode.
-also have bonus levels (like the all-water level)
-survival mode...how long can you survive with faster and faster traffic?  Somehow have an incentive to collect eggs or get across the road.
-collect as many eggs as you can as traffic moves faster and faster.  record the highest number of eggs collected.



Gameplay:
-There will be a median in the road so you can take a break
-possibly have pedestrians
-definitely have vehicles
-maybe crosswalks/stoplights can be worked in
-swipe in any direction to make chicken move
-accelerometer in any way?
-stopwatches to slow time?
-bridges and jumping fish?  cart and horses?
-collect a number of eggs before crossing the road.  an egg will only appear after others are collected.
-when five chickens get across, increase the level.
-I need to figure out how many vertical lanes there will be
-chicken can get to five spots at the end.  When he does progress to next level and increase difficulty.


Features to implement:
-1st level get 1 egg, second get 2, third get 3 and so on.  After the levels have been completed, go back to the first but continue incrementing the eggs.  Do this indefinitely.
	-user gets 3 - 5 lives
	-five levels (one will be water on both sides of a rest in the middle)
	-the enemies will not get harder and harder....they will stay the same
	-The incentive to keep playing will be to see what level you can get to.  Record the maximum level achieved.
	-store highest levels achieved with date (save top 5 attempts)
	-show high scores after dying
-store scores on device
-make a pause screen (pause button on game Layer) (actually....don't do this.  this could give the player an unfair advantage)
-create 'scramble egg' mode: scramble to get as many eggs as you can!  Traffic will gradually move faster and faster.  User can pick a level.
	-make a level-select screen (can only select levels that have been opened in regular mode, maybe?) for other this mode
	-this will have the same five levels as the main mode, plus a road map with no rests and a water map with no rests
	-maybe enemies should stay consistent (and relatively easy?)
	-store highest number of eggs collected (save top 5 attempts)
	-HUD should show current record number of eggs collected for that given level
	-to do this I need to add a master levels.plist that has an array that has level number and level plist (e.g. level1 -> level_1.plist)
-I need the following screens added:
	-JGNation splash screen
	-tutorial screen for each mode
	-About screen (movie credits text) 
	-like on facebook kind of text?  review game button?
------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------


Notes:
-don't forget to release() and/or delete all of the objects that are created that are not being managed by the cocos2d-x memory pool!

----------------------------------------------------------------------------------------------------------------------------------------
options for refactoring vehicle spawning:
-vehicles can inherit from CCSprite.  then the CCObject * sender can be that sprite and I can easily remove it

+I need to maintain a list of sprites currently on the screen.  I can precreate them like I am now (this is a waste if
many of them are not on the screen), or I can create them on the fly (waste of time constantly initializing)
+If I precreate them, I can add a 'isVisible' property to check.  if !isVisible, don't execute any logic
+If I precreate them, where would I do it?  In GameLayer?  In each Lane?  The lane can only produce certain vehicles.
+Each lane could precreate vehicles, have a list of them, and pick them at random to display them
+If I were to do that, I would have to somehow notate which ones are currently visible
+CCSprite has a isVisible property
+If I create them on the fly, I can:
	-create them in lane
	-add the sprite to the layer
	-after adding the sprite, add the vehicle to a list of vehicles....isVisible will be true
	-in the callback, isVisible will be false after removing it from the layer (either that or I will set it to false)
	-in the update method I can scan the list of vehicles.  Vehicles where !isVisible, delete it
+Ideally I want the object destroyed right when the action is over!
+Maybe initiate the action in the Vehicle class...with the callback in the Vehicle class.  Then the callback can call a 
'delete this'?  Maybe?  I SHOULD TRY THIS FIRST.
+I Think the option directly above would work well....but it is not optimal.  The best thing to do will probably be to
have Vehicle inherit from CCSprite and have the callback remove it.  I would have to redo sprite intersection logic...
although that may already be built into CCSprite
+Really...the best way would probably be to NOT create these sprite dynamically.  Use the isVisible property.  I would
just have to make sure that we never try to add a sprite that is already doing something on the screen.
+Maybe SpriteContainer should be a CCNode instead of CCObject (a CCNode is a CCObject, right?), and then the whole object
can be sent to the callback (THIS will not work because *sender is the Sprite, not the SpriteContainer)
----------------------------------------------------------------------------------------------------------------------

-Keyboard input on version > 3.0 alpha:
	http://www.cocos2d-x.org/forums/6/topics/39145

----------------------------------------------------------------------------------------------------------------------

-Images:
clker
openclipart
wikimedia commons

---------------------------------------------------------------------------------------------------------------------------
Passing Parameters into CCObjects:
http://www.cocos2d-x.org/forums/6/topics/14363

-----------------------------------------------------------------------------------------------------------------------------
Other chicken game:
http://www.flash-game.net/game/1892/chicken-road.html
-In that game, vehicles spawn at predictable intervals.  Each lane has certain vehicle(s) that spawn, but in
no particular order.  It appears to be random (unless it is the same thing every time)
-so it looks like each lane has a list of possibilities, and an item from those possibilities is picked at random


